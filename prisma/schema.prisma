// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @unique @default(autoincrement())
  username   String    @unique
  email      String    @unique
  password   String
  bio        String?
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  tweets     Tweet[]
  likes      Like[]
  comments   Comment[]
}

model Tweet {
  id         Int       @id @unique @default(autoincrement())
  context    String
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
  views      Int       @default(0)
  likes      Like[]
  comments   Comment[]
}

model Like {
  created_at DateTime @default(now())

  user    User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  tweet   Tweet @relation(fields: [tweetId], references: [id], onDelete: Cascade)
  userId  Int
  tweetId Int

  @@id(name: "id", [userId, tweetId])
}

model Comment {
  id         Int      @id @unique @default(autoincrement())
  payload    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
  tweet      Tweet    @relation(fields: [tweetId], references: [id], onDelete: Cascade)
  tweetId    Int
}
